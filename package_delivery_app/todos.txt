see lines ~350 in route_builder
where I have notes on where I am at
solving the bug(s)



FINAL coding block. Jesus Christ.

Subblock 20: update d-c handling to not see correct address if truck time not > d-c time, if it exists; also change 'urgent' pkgs to be those <2h after leave and replace references to 9am, 10am in route_builder; check it works then also re-add in the single-line main change that fixes the 8am rb issue, rerun to see my familiar error
	est. 30m	8:48-9:11pm + ?
+ more if I have to come back after Subb 21

NOTE: I cannot fully test whether my update_corrected_packages update worked because I ALSO need to make truck time 'pass' even when they have no packages to grab and I can 'hack' that by having a truck just WAIT if there are only dest-corrs by waiting until the last one is known, and implement "waiting" to setting the time equal to a helper that returns the latest d-c time.
So I'm waiting until Subblock 21's code update is done because THEN I'll be able to run trucks later WITHOUT error and so THEN I can have a truck wait even later (until 10:20)

Subblock 21: add new r_b helper and new step III (move others up). Here's the idea:

~ I'm going to need to grab meets_deadlines code that adds projected time.. eff. I also need to call the stop_deadlines helper FROM my new helper, then get stop locations, then perform a NN route-build, then sum the distances and WHILE distnace-sum > amount determined by 

if at this point it's too late to make deadlines, drop a deadline package, namely the one furthest from the hub, and see if that fixes it (iterate until fixed). 

after this we'll be ok because adding more stops / pkgs still guarantees the one minimal passing route exists--namely, visiting all the deadline packages and then going home. 
(So, the helper must include the cost of going home in its NN pseudo-route-construction)

	est. 60m	9:11-9:32 + ?

Subblock 22: test it works, test the d-c code works, comb comments, update readme + push 0.9.3
	est. 30pm 	?

THEN, tomorrow morning, FINALLY finish the writing portion and submit!


===========
TODO list
For better code but ~same functionality:

- Print functionality: there are many possibilities:
	- Say "Press Enter to continue" instead of showing it all at once!
	- Use terminal get-window size IN ORDER TO
		- get width and then replace all my carefully-manually-inserted
		newlines with (80% width) or something like that

- Hash: adjust __setitem__ to reduce count when replacing
items that themselves were Hashes (and which thus contributed
> 1 to self._count). This is not a critical bug--it would just
lead to unnecesarily large __props.

- Hash: _flatten and _deepcopy could both be made shorter

- Truck and Package: pass destination-correction time from
update_corrected_packages to Package's
update_wrong_destination_as_corrected and have that method
append a history record to indicate when the delivery-status
changed from wrong-destination to at-hub.

- Add TESTS!
	- Hash and Regex: convert tests to Python's built-in
	unittest or an actual testing module instead of my sad
	current print-statement crutches.
	- Algorithms': add automated tests route_builder and
	route_helpers
	- General: add automated tests that walk through the whole
	app from start to finish ('integration' test(s))
